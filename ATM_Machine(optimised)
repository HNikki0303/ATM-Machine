import java.util.Scanner;

class ATM {
    // Creating global variables for bank balance and denominations
    public static int bankBalance = 0;
    public static int[] denominations = {500, 200, 100, 50, 20, 10};
    public static int[] noteCount = new int[denominations.length];

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        instructions();
        int userChoice;

        while (true) {
            userChoice = sc.nextInt();
            switch (userChoice) {
                case 1:
                    deposit(sc);
                    break;
                case 2:
                    withdraw(sc);
                    break;
                case 3:
                    System.out.println("Exiting...");
                    sc.close();
                    return; // Exit the program
                default:
                    System.out.println("Invalid option. Please try again.");
            }
            instructions(); // Show instructions again
        }
    }

    // Function to deposit money
    public static void deposit(Scanner sc) {
        System.out.print("Enter the amount to deposit: ");
        int amount = sc.nextInt(); // Amount to be deposited
        bankBalance += amount; // Updating the bank balance
        calculateDenominations(amount); // Calculate denominations for the deposited amount
        System.out.println("Denomination of each note for this deposited amount:");
        displayDenominations(); // Display the denominations
    }

    // Function to withdraw an amount
    public static void withdraw(Scanner sc) {
        System.out.print("Enter the amount to withdraw: ");
        int withdrawAmount = sc.nextInt(); // Amount to be withdrawn

        // Withdrawal depends on the deposited money and bank balance
        if (withdrawAmount > bankBalance) {
            System.out.println("Insufficient bank balance."); // Insufficient funds message
            return;
        }

        resetNoteCount(); // Reset note counts before withdrawal
        if (!withdrawDenominations(withdrawAmount)) {
            System.out.println("Unable to dispense the exact amount with available denominations."); // Error message
        } else {
            bankBalance -= withdrawAmount; // Update bank balance
            System.out.println("Denomination of each note for this withdrawn amount:");
            displayDenominations(); // Display the denominations
        }
    }

    // Recursive function to calculate denominations for a given amount
    public static boolean withdrawDenominations(int amount) {
        for (int i = 0; i < denominations.length; i++) {
            while (amount >= denominations[i] && noteCount[i] < (bankBalance / denominations[i])) {
                amount -= denominations[i]; // Subtract denomination from amount
                noteCount[i]++; // Increment the count for the denomination
            }
        }
        return amount == 0; // Return true if the exact amount is withdrawn
    }

    // Function to calculate denominations based on the deposited amount
    public static void calculateDenominations(int amount) {
        for (int i = 0; i < denominations.length; i++) {
            noteCount[i] = (amount / denominations[i]); // Calculate number of notes for each denomination
            amount %= denominations[i]; // Remaining amount after calculating notes
        }
    }

    // Function to display the denominations
    public static void displayDenominations() {
        for (int i = 0; i < denominations.length; i++) {
            System.out.println(denominations[i] + " : " + noteCount[i]); // Display each denomination and its count
        }
    }

    // Function to reset note counts
    public static void resetNoteCount() {
        for (int i = 0; i < noteCount.length; i++) {
            noteCount[i] = 0; // Resetting note counts to zero
        }
    }

    // Function to display instructions
    public static void instructions() {
        System.out.println("Press 1 for Deposit");
        System.out.println("Press 2 for Withdraw");
        System.out.println("Press 3 for Exit");
    }
}
